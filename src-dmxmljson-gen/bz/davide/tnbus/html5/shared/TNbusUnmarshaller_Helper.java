/*********************************************************************************
 *                                                                               *
 * WARNING: File automatically generated by DMXmlJson. DON'T CHANGE IT manually! *
 *                                                                               *
 *********************************************************************************/

package bz.davide.tnbus.html5.shared;


public class TNbusUnmarshaller_Helper extends it.bz.tis.sasabus.html5.shared.ui.TNbusUnmarshaller_Helper
{
   protected TNbusUnmarshaller_Helper()
   {
      this.emptyObjectCheck.put("bz.davide.tnbus.html5.shared.BusStationSponsorsView", new bz.davide.dmxmljson.unmarshalling.EmptyFieldChecker<bz.davide.tnbus.html5.shared.BusStationSponsorsView>() {
         @Override public void check(bz.davide.tnbus.html5.shared.BusStationSponsorsView  ret){
         }
      });
      this.putInstanceFactory("bz.davide.tnbus.html5.shared.BusStationSponsorsView", new bz.davide.dmxmljson.unmarshalling.InstanceFactory() {
         @Override public Object newInstance() throws Exception {
            bz.davide.tnbus.html5.shared.BusStationSponsorsView ret = new bz.davide.tnbus.html5.shared.BusStationSponsorsView();
            return ret;
         }
      });

      this.putClassUnmarshaller("bz.davide.tnbus.html5.shared.BusStationSponsorsView", new bz.davide.dmxmljson.unmarshalling.ClassUnmarshaller() {
         @Override public void unmarshall(bz.davide.dmxmljson.unmarshalling.Structure structure, Object obj, java.util.HashMap<String, Object> identities) throws Exception {
            structure.open();
            String id = structure.getId();
            if (id != null)
               identities.put(id, obj);
            bz.davide.dmxmljson.unmarshalling.Value value;
            structure.close();
         }
      });
      this.emptyObjectCheck.put("bz.davide.tnbus.html5.shared.HomePageSponsorsView", new bz.davide.dmxmljson.unmarshalling.EmptyFieldChecker<bz.davide.tnbus.html5.shared.HomePageSponsorsView>() {
         @Override public void check(bz.davide.tnbus.html5.shared.HomePageSponsorsView  ret){
         }
      });
      this.putInstanceFactory("bz.davide.tnbus.html5.shared.HomePageSponsorsView", new bz.davide.dmxmljson.unmarshalling.InstanceFactory() {
         @Override public Object newInstance() throws Exception {
            bz.davide.tnbus.html5.shared.HomePageSponsorsView ret = new bz.davide.tnbus.html5.shared.HomePageSponsorsView();
            return ret;
         }
      });

      this.putClassUnmarshaller("bz.davide.tnbus.html5.shared.HomePageSponsorsView", new bz.davide.dmxmljson.unmarshalling.ClassUnmarshaller() {
         @Override public void unmarshall(bz.davide.dmxmljson.unmarshalling.Structure structure, Object obj, java.util.HashMap<String, Object> identities) throws Exception {
            structure.open();
            String id = structure.getId();
            if (id != null)
               identities.put(id, obj);
            bz.davide.dmxmljson.unmarshalling.Value value;
            structure.close();
         }
      });
      this.emptyObjectCheck.put("bz.davide.tnbus.html5.shared.NoRoutingSponsorViewFactory", new bz.davide.dmxmljson.unmarshalling.EmptyFieldChecker<bz.davide.tnbus.html5.shared.NoRoutingSponsorViewFactory>() {
         @Override public void check(bz.davide.tnbus.html5.shared.NoRoutingSponsorViewFactory  ret){
         }
      });
      this.putInstanceFactory("bz.davide.tnbus.html5.shared.NoRoutingSponsorViewFactory", new bz.davide.dmxmljson.unmarshalling.InstanceFactory() {
         @Override public Object newInstance() throws Exception {
            bz.davide.tnbus.html5.shared.NoRoutingSponsorViewFactory ret = new bz.davide.tnbus.html5.shared.NoRoutingSponsorViewFactory();
            return ret;
         }
      });

      this.putClassUnmarshaller("bz.davide.tnbus.html5.shared.NoRoutingSponsorViewFactory", new bz.davide.dmxmljson.unmarshalling.ClassUnmarshaller() {
         @Override public void unmarshall(bz.davide.dmxmljson.unmarshalling.Structure structure, Object obj, java.util.HashMap<String, Object> identities) throws Exception {
            structure.open();
            String id = structure.getId();
            if (id != null)
               identities.put(id, obj);
            bz.davide.dmxmljson.unmarshalling.Value value;
            structure.close();
         }
      });

   }
}
